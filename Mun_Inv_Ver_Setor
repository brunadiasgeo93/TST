// === 0. Configurações de exportação ===
var exportarRaster = false;   // Defina como true ou false
var exportarGeoJSON = true;  // Defina como true ou false

// === 1. Definir nome do município e da UF ===
var nomeMunicipio = 'Belém';
var nomeUF = 'PA';  // Deixe como '' se não quiser filtrar ou incluir no nome do arquivo

// === 2. Importar malhas de municípios e setores censitários ===
var municipios = ee.FeatureCollection('projects/ee-brunadiasgeo/assets/BR_Municipios_2024');
var setores = ee.FeatureCollection('projects/ee-brunadiasgeo/assets/Setores_2022_Urbano');

// === 3. Filtrar município e setores pelo nome do município e UF ===
var filtrosMunicipio = ee.Filter.eq('NM_MUN', nomeMunicipio);
var filtrosSetores = ee.Filter.eq('NM_MUN', nomeMunicipio);

if (nomeUF !== '') {
  filtrosMunicipio = ee.Filter.and(filtrosMunicipio, ee.Filter.eq('NM_UF', nomeUF));
  filtrosSetores = ee.Filter.and(filtrosSetores, ee.Filter.eq('NM_UF', nomeUF));
}

var municipio = municipios.filter(filtrosMunicipio);
var setoresMunicipio = setores.filter(filtrosSetores);

// === 4. Função para processar a LST das imagens Landsat ===
function processaST(image) {
  var qa = image.select('QA_PIXEL');
  var semNuvem = qa.bitwiseAnd(1 << 3).eq(0);
  var semSombra = qa.bitwiseAnd(1 << 4).eq(0);
  var mascara = semNuvem.and(semSombra);
  var imageMascarada = image.updateMask(mascara);
  var lstCelsius = imageMascarada.select('ST_B10')
    .multiply(0.00341802)
    .add(149.0)
    .subtract(273.15)
    .rename('TST_C');
  return imageMascarada.addBands(lstCelsius).clip(municipio);
}

// === 5. Definir datas para estações do ano ===
var datasEstacoes = {
  'Verao': ['2024-12-20', '2025-03-20'],
  'Inverno': ['2024-06-21', '2024-09-22']
};

// === 6. Parâmetros para visualização da camada raster ===
var visParams = {
  min: 15,
  max: 50,
  palette: [
    '#081d58', '#225ea8', '#41b6c4', '#7fcdbb', '#c7e9b4',
    '#ffffcc', '#fe9929', '#ec7014', '#cc4c02', '#800026'
  ]
};

// === 7. Função para adicionar legenda ao mapa ===
function adicionarLegenda() {
  var legenda = ui.Panel({style: {position: 'bottom-left', padding: '8px 15px'}});
  var titulo = ui.Label({
    value: 'Legenda (°C)',
    style: {fontWeight: 'bold', fontSize: '14px', margin: '0 0 6px 0'}
  });
  legenda.add(titulo);
  
  var cores = visParams.palette;
  var labels = ['< 20', '20–22', '22–24', '24–26', '26–28', '28–30', '30–32', '32–35', '35–45', '> 45'];
  
  for (var i = 0; i < cores.length; i++) {
    var linha = ui.Panel({layout: ui.Panel.Layout.Flow('horizontal')});
    var cor = ui.Label({style: {backgroundColor: cores[i], padding: '8px', margin: '0 4px 4px 0'}});
    var texto = ui.Label({value: labels[i], style: {margin: '0 0 4px 0'}});
    linha.add(cor);
    linha.add(texto);
    legenda.add(linha);
  }
  
  Map.add(legenda);
}

// === 8. Função para processar, exportar e diagnosticar LST por estação ===
function processaEexporta(nomeEstacao, datas) {
  var colecao = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
    .merge(ee.ImageCollection('LANDSAT/LC09/C02/T1_L2'))
    .filterDate(datas[0], datas[1])
    .filterBounds(municipio)
    .filter(ee.Filter.lt('CLOUD_COVER', 20))
    .map(processaST);
  
  var nImagens = colecao.size();
  print('Qtd imagens - ' + nomeEstacao + ':', nImagens);
  
  nImagens.evaluate(function(count) {
    if (count === 0) {
      print('Nenhuma imagem disponível para ' + nomeEstacao + '. Não será feita exportação.');
    } else {
      var mediaLST = colecao.select('TST_C').mean();
      Map.addLayer(mediaLST, visParams, 'TST_Media_' + nomeMunicipio + '_' + nomeEstacao);
      
      var mediaPorSetor = mediaLST.reduceRegions({
        collection: setoresMunicipio,
        reducer: ee.Reducer.mean(),
        scale: 30,
      }).map(function(feature) {
        return feature.set('Estacao', nomeEstacao);
      });
      
      var imagemVetorial = mediaPorSetor.reduceToImage({
        properties: ['mean'],
        reducer: ee.Reducer.first()
      });
      
      Map.addLayer(
        imagemVetorial.visualize(visParams),
        {},
        'TST_Setores_' + nomeMunicipio + '_' + nomeEstacao
      );
      
      var ano = datas[0].split('-')[0];
      
      var sufixoUF = (nomeUF !== '') ? '_' + nomeUF.replace(' ', '_') : '';
      var nomeArquivoBase = nomeMunicipio.replace(' ', '_') + sufixoUF + '_' + nomeEstacao + '_' + ano;

      // === Diagnóstico automático ===
      var totalSetores = setoresMunicipio.size();
      print('Total de setores:', totalSetores);
      
      var setoresComMedia = mediaPorSetor.filter(ee.Filter.notNull(['mean'])).size();
      print('Setores com valor de TST_C médio:', setoresComMedia);
      
      var setoresSemMedia = mediaPorSetor.filter(ee.Filter.notNull(['mean']).not()).size();
      print('Setores sem valor de TST_C médio:', setoresSemMedia);
      
      var percentualComMedia = setoresComMedia.divide(totalSetores).multiply(100);
      print('Percentual de setores com valor de TST_C médio (%):', percentualComMedia);
      
      var percentualSemMedia = setoresSemMedia.divide(totalSetores).multiply(100);
      print('Percentual de setores sem valor de TST_C médio (%):', percentualSemMedia);
      
      // === Exportações condicionais ===
      if (exportarGeoJSON) {
        Export.table.toDrive({
          collection: mediaPorSetor,
          description: 'TST_Media_Setor_' + nomeArquivoBase,
          folder: 'GEE_exports',
          fileFormat: 'GeoJSON'
        });
      }
      
      if (exportarRaster) {
        Export.image.toDrive({
          image: mediaLST,
          description: 'TST_Media_Raster_' + nomeArquivoBase,
          folder: 'GEE_exports',
          fileNamePrefix: 'TST_Media_Raster_' + nomeArquivoBase,
          region: municipio.geometry(),
          scale: 30,
          maxPixels: 1e13
        });
      }
    }
  });
}

// === 9. Executar processamento e exportação para cada estação ===
processaEexporta('Verao', datasEstacoes['Verao']); // ← Comente ou remova esta linha
// processaEexporta('Inverno', datasEstacoes['Inverno']); // ← Comente ou remova esta linha

// === 10. Centralizar mapa no município e adicionar camada de contorno ===
Map.centerObject(municipio, 10);
Map.addLayer(municipio.style({
  color: 'black',
  fillColor: '00000000',
  width: 1
}), {}, 'Município');

// === 11. Adicionar legenda ao mapa ===
adicionarLegenda();
